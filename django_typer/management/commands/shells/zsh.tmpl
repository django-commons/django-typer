#compdef %(prog_name)s

%(complete_func)s() {

  # Extract --settings and --pythonpath options and their values if present becase
  # we need to pass these to the complete script - they may be necessary to find the command!
  local settings_option=""
  local pythonpath_option=""

  for ((i=1; i<$CURRENT; i++)); do
    case "${words[i]}" in
      --settings)
        # Only pass settings to completion script if we're sure it's value does not itself need completion!
        if (( i + 1 < CURRENT )) && [[ -n "${words[i+1]}" ]] && [[ "${words[i+1]}" != --* ]]; then
          settings_option="--settings=${words[i+1]}"
        fi
        ;;
      --pythonpath)
        # Only pass pythonpath to completion script if we're sure it's value does not itself need completion!
        if (( i + 1 < CURRENT )) && [[ -n "${words[i+1]}" ]] && [[ "${words[i+1]}" != --* ]]; then
          pythonpath_option="--pythonpath=${words[i+1]}"
        fi
        ;;
    esac
  done

  eval $(env _TYPER_COMPLETE_ARGS="${words[1,$CURRENT]}" %(autocomplete_var)s=complete_zsh ${words[0,1]} {{ django_command }} ${settings_option:+${settings_option}} ${pythonpath_option:+${pythonpath_option}} {{ color }} complete)
}

compdef %(complete_func)s %(prog_name)s
